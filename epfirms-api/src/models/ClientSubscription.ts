// this is the model that is used to store the clients of the firm info about their subscription
// subscriptions still generate invoices and these will need to have the subscription ID attached to them to differentiate 
// them
module.exports = (sequelize, { INTEGER, BOOLEAN, STRING, DATE}) => {
  const tableName = 'client_subscription';

  const ClientSubscription = sequelize.define(
    tableName,
    {
      id: {
        type: INTEGER,
        primaryKey: true,
        autoIncrement: true,
      },
      // id of the client on the user table
      user_id: {
        type: INTEGER,
      },
      firm_id: {
        type: INTEGER,
        allowNull: false,
      },
      matter_id: {
        type: INTEGER,
        allowNull: false,
      },

      // unique subscription id generated by stripe
      subscription_id: {
        type: STRING,
      },
      // the unique customer_id generated by stripe
      customer_id: {
        type: STRING,
        },
      // the date that the subscription will charge
      monthly_due_date: {
        type: DATE,
      },
      description: {
        type: STRING,
      },
      // this one will only ever be edited when a webhook from stripe is fufilled
      // 'incomplete', 'active', 'past_due', 'unpaid', 'paid', 'canceled', 'incomplete_expired'
      status: {
        type: STRING,
      },
      auto_pay: {
        type: BOOLEAN,
      },
      terms: {
          type: INTEGER,
      },
      cancel_at: {
            type: DATE,
      },
      amount: {
        type: INTEGER,
      }
      
    },
    {
      tableName,
      defaultScope: {
        attributes: { exclude: ['createdAt', 'updatedAt'] },
      },
    },
  );

  return ClientSubscription;
};

